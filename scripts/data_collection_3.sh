#!/bin/bash

# Function to get system stats and render UI
get_stats() {
    clear
    echo -e "\033[1;32m‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\033[0m"
    echo -e "\033[1;32m‚ïë              üñ•Ô∏è  ADVANCED SYSTEM MONITOR            ‚ïë\033[0m"
    echo -e "\033[1;32m‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£\033[0m"

    # üü¢ CPU Usage
    CPU=$(top -bn1 | grep "Cpu(s)" | awk '{print $2 + $4}')
    echo -e "\033[1;34m‚ïë üî• CPU Usage: $CPU%                                 ‚ïë\033[0m"

    # üü¢ Memory Usage
    MEM_TOTAL=$(free -m | awk 'NR==2{print $2}')
    MEM_USED=$(free -m | awk 'NR==2{print $3}')
    MEM_PERCENT=$(( 100 * MEM_USED / MEM_TOTAL ))
    echo -e "\033[1;34m‚ïë üìå Memory Usage: $MEM_USED MB / $MEM_TOTAL MB ($MEM_PERCENT%) 		‚ïë\033[0m"

    # üü¢ Disk Usage
    DISK=$(df -h / | awk 'NR==2 {print $5}')
    echo -e "\033[1;34m‚ïë üíæ Disk Usage: $DISK                                 ‚ïë\033[0m"

    # üü¢ Network Usage
    NET=$(ss -s | grep "estab" | awk '{print $4}')
    echo -e "\033[1;34m‚ïë üåê Active Connections: $NET                         ‚ïë\033[0m"

    # üü¢ Disk I/O Usage
    DISK_IO=$(iostat -d | awk 'NR==4 {print $2}')
    echo -e "\033[1;34m‚ïë üìä Disk I/O: $DISK_IO MB/s                          ‚ïë\033[0m"

    echo -e "\033[1;32m‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\033[0m"
}

# Function to display top processes
show_processes() {
    echo -e "\n\033[1;36müìå Top 5 CPU-consuming Processes\033[0m"
    ps -eo pid,comm,%cpu --sort=-%cpu | head -6

    echo -e "\n\033[1;36müìå Top 5 Memory-consuming Processes\033[0m"
    ps -eo pid,comm,%mem --sort=-%mem | head -6
}

# Function to kill high CPU/memory processes
kill_process() {
    echo -e "\n\033[1;31m‚ö†Ô∏è  Killing High Resource Usage Process\033[0m"
    read -p "Enter PID to kill: " PID
    kill -9 $PID
    echo -e "‚úÖ Process $PID killed!"
}

# Function to monitor network bandwidth
monitor_network() {
    echo -e "\n\033[1;36müåê Live Network Bandwidth Usage\033[0m"
    watch -n 1 ifstat
}

# Function to send alerts
send_alert() {
    CPU=$(top -bn1 | grep "Cpu(s)" | awk '{print $2 + $4}')
    if (( $(echo "$CPU > 85" | bc -l) )); then
        echo "‚ö†Ô∏è High CPU Usage Detected! ($CPU%)"
        # Send alert (extend this for email/Slack integration)
    fi
}

# Main menu
while true; do
    get_stats
    show_processes
    echo -e "\n\033[1;33müìå Options:\033[0m"
    echo -e "1Ô∏è‚É£  Refresh"
    echo -e "2Ô∏è‚É£  Kill a Process"
    echo -e "3Ô∏è‚É£  Monitor Network Bandwidth"
    echo -e "4Ô∏è‚É£  Exit"
    read -p "üëâ Select an option: " OPTION

    case $OPTION in
        1) continue ;;
        2) kill_process ;;
        3) monitor_network ;;
        4) exit ;;
        *) echo "Invalid choice!";;
    esac
done

